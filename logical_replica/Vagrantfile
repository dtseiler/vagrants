# -*- mode: ruby -*-
# vi: set ft=ruby :

pg_version = "12"

servers = [
    {
        :name => "postgres-lr1",
        :ipaddr => "192.168.99.101",
        :box => "bento/ubuntu-18.04"
    },
    {
        :name => "postgres-lr2",
        :ipaddr => "192.168.99.102",
        :box => "bento/ubuntu-20.04"
    }
]

Vagrant.configure("2") do |config|
    servers.each do |server|
        config.vm.define server[:name] do |srv|

            srv.vm.box = server[:box]
            srv.vm.network :private_network, ip: server[:ipaddr]
            srv.vm.hostname = server[:name]

            srv.vm.provider :virtualbox do |vb|
                vb.name = server[:name]
                vb.memory = 1024
                vb.gui = false
            end

            srv.vm.provision "shell", inline: <<-SHELL
                cat > /etc/apt/sources.list <<EOF
deb [arch=amd64] #{ENV['APT_MIRROR']}/mirror/archive.ubuntu.com/ubuntu/ $(lsb_release -cs) main restricted
deb [arch=amd64] #{ENV['APT_MIRROR']}/mirror/archive.ubuntu.com/ubuntu/ $(lsb_release -cs)-updates main restricted

deb [arch=amd64] #{ENV['APT_MIRROR']}/mirror/archive.ubuntu.com/ubuntu/ $(lsb_release -cs) universe 
deb [arch=amd64] #{ENV['APT_MIRROR']}/mirror/archive.ubuntu.com/ubuntu/ $(lsb_release -cs)-updates universe

deb [arch=amd64] #{ENV['APT_MIRROR']}/mirror/archive.ubuntu.com/ubuntu/ $(lsb_release -cs) multiverse
deb [arch=amd64] #{ENV['APT_MIRROR']}/mirror/archive.ubuntu.com/ubuntu/ $(lsb_release -cs)-updates multiverse

deb [arch=amd64] #{ENV['APT_MIRROR']}/mirror/archive.ubuntu.com/ubuntu/ $(lsb_release -cs)-security main restricted
deb [arch=amd64] #{ENV['APT_MIRROR']}/mirror/archive.ubuntu.com/ubuntu/ $(lsb_release -cs)-security universe
deb [arch=amd64] #{ENV['APT_MIRROR']}/mirror/archive.ubuntu.com/ubuntu/ $(lsb_release -cs)-security multiverse
EOF
                apt-get -y update
                apt-get -y install curl ca-certificates
                curl -s #{ENV['APT_MIRROR']}/mirror/apt.postgresql.org/ACCC4CF8.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg >/dev/null
                echo "deb [arch=amd64] #{ENV['APT_MIRROR']}/mirror/apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
                apt-get -y update

                apt-get -y install postgresql-#{pg_version}

                echo "listen_addresses = '*'" >> /etc/postgresql/#{pg_version}/main/postgresql.conf
                echo "max_wal_senders = 10" >> /etc/postgresql/#{pg_version}/main/postgresql.conf
                echo "max_replication_slots = 10" >> /etc/postgresql/#{pg_version}/main/postgresql.conf
                echo "wal_level = logical" >> /etc/postgresql/#{pg_version}/main/postgresql.conf
                echo "host    all             replicator      192.168.99.0/24         md5" >> /etc/postgresql/#{pg_version}/main/pg_hba.conf

                su -l postgres -c "echo 'export PATH=/usr/lib/postgresql/#{pg_version}/bin:\$PATH' >> /var/lib/postgresql/.pgsql_profile"
                su -l postgres -c "echo '*:*:*:replicator:replicator123' >> /var/lib/postgresql/.pgpass"
                su -l postgres -c "echo '*:*:*:postgres:postgres@123!' >> /var/lib/postgresql/.pgpass"
                su -l postgres -c "chmod 0600 /var/lib/postgresql/.pgpass"

                if [ $(hostname) = 'postgres-lr1' ]
                then
                    su -l postgres -c "psql -c \\"create user replicator replication password 'replicator123'\\""
                    systemctl restart postgresql@#{pg_version}-main
                    su -l postgres -c "createdb testdb"
                    su -l postgres -c "psql -d testdb -a -f /vagrant/gen_data.sql"
                    su -l postgres -c "pg_dump -d testdb -s -f /tmp/testdb_schema.sql"
                    su -l postgres -c "psql -d testdb -c \\"CREATE PUBLICATION testdb_pub FOR ALL TABLES;\\""
                    mv /tmp/testdb_schema.sql /vagrant/testdb_schema.sql

                else
                    su -l postgres -c "createdb testdb"
                    su -l postgres -c "psql -d testdb < /vagrant/testdb_schema.sql"
                    su -l postgres -c "psql -d testdb -c \\"CREATE SUBSCRIPTION testdb_sub CONNECTION 'host=192.168.99.101 port=5432 user=replicator dbname=testdb' PUBLICATION testdb_pub;\\""
                fi
            SHELL
        end
    end
end
