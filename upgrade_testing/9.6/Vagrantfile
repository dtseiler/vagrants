# -*- mode: ruby -*-
# vi: set ft=ruby :

# define hostname
NAME = "uptest-pg96"

Vagrant.configure("2") do |config|
    config.vm.define NAME
    config.vm.box = "bento/ubuntu-18.04"
    config.vm.hostname = NAME

    config.vm.provision "shell", inline: <<-SHELL
        locale-gen en_US && update-locale
        
        #
        # PostgreSQL 9.6 Setup
        #
        apt-get -y install curl ca-certificates
        curl -s https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
        echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
        apt-get -y update
        apt-get -y install postgresql-9.6
        systemctl stop postgresql@9.6-main
        pg_dropcluster 9.6 main
        pg_createcluster --lc-collate=en_US --lc-ctype=en_US --lc-messages=en_US --lc-monetary=C --lc-numeric=C --lc-time=C 9.6 main
        systemctl start postgresql@9.6-main
        #su -l postgres -c "psql -f /vagrant/template_change.sql"
        su -l postgres -c "psql <<EOF
update pg_database set datistemplate = FALSE where datname = 'template1';
drop database template1;
create database template1 with template = template0 encoding = 'UTF8' lc_ctype='en_US.utf8' lc_collate='en_US.utf8';
update pg_database set datistemplate = TRUE where datname = 'template1';
create database test lc_ctype='en_US' lc_collate='en_US' encoding='LATIN1' template='template0';
update pg_database set encoding = pg_char_to_encoding('UTF8') where datname = 'test';
EOF"
        su -l postgres -c "psql -l"
        su -l postgres -c "psql -d test -c \\"create table dts_tables as select * from pg_tables\\""

        #
        # WAL-G Setup
        #
        wget -nv https://github.com/wal-g/wal-g/releases/download/v0.2.9/wal-g.linux-amd64.tar.gz
        tar -xzf wal-g.linux-amd64.tar.gz
        mv wal-g /usr/local/bin
        rm wal-g.linux-amd64.tar.gz

        mkdir -p /etc/wal-g/environment
        chown -R postgres:postgres /etc/wal-g
        chmod 0755 /etc/wal-g
        chmod 0755 /etc/wal-g/environment
        
        #
        # WAL-G Scripts
        #
        cat > /etc/wal-g/environment/env.sh <<EOF
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
export PGHOST=/var/run/postgresql
export PGPORT=5432
export AWS_ACCOUNT_ID="#{ENV['AWS_ACCOUNT_ID']}"
export AWS_ACCESS_KEY_ID="#{ENV['AWS_ACCESS_KEY_ID']}"
export AWS_SECRET_ACCESS_KEY="#{ENV['AWS_SECRET_ACCESS_KEY']}"
export AWS_DEFAULT_REGION="#{ENV['AWS_DEFAULT_REGION']}"
export AWS_REGION="#{ENV['AWS_REGION']}"
export WALG_S3_PREFIX="#{ENV['WALG_S3_PREFIX']}/9.6_upgrade_01"
EOF
        chmod 755 /etc/wal-g/environment/env.sh

        cat > /usr/local/bin/wal-g_backup.sh <<EOF
#!/bin/bash

source /etc/wal-g/environment/env.sh

wal-g backup-push \\$1
EOF
        chmod 755 /usr/local/bin/wal-g_backup.sh

        cat > /usr/local/bin/wal-g_archive.sh <<EOF
#!/bin/bash

source /etc/wal-g/environment/env.sh

wal-g wal-push \\$1
EOF
        chmod 755 /usr/local/bin/wal-g_archive.sh

        # Configure PostgreSQL WAL archiving
        echo "wal_level = replica" >> /etc/postgresql/9.6/main/conf.d/wal-g.conf
        echo "archive_mode = on" >> /etc/postgresql/9.6/main/conf.d/wal-g.conf
        echo "archive_command = '/usr/local/bin/wal-g_archive.sh %p'" >> /etc/postgresql/9.6/main/conf.d/wal-g.conf
        systemctl restart postgresql@9.6-main

        #
        # Install PG 12
        #
        apt-get -y install postgresql-12
        systemctl stop postgresql@12-main
        pg_dropcluster 12 main
        pg_createcluster --lc-collate=en_US --lc-ctype=en_US --lc-messages=en_US --lc-monetary=C --lc-numeric=C --lc-time=C 12 main
        #pg_createcluster 12 main -- --data-checksums ## Can't upgrade directly from no checksums to checksums
        #pg_createcluster 12 main
        systemctl start postgresql@12-main
        su -l postgres -c "psql -p 5433 <<EOF
update pg_database set datistemplate = FALSE where datname = 'template1';
drop database template1;
create database template1 with template = template0 encoding = 'UTF8' lc_ctype='en_US.utf8' lc_collate='en_US.utf8';
update pg_database set datistemplate = TRUE where datname = 'template1';
EOF"
        su -l postgres -c "psql -p 5433 -l"
        systemctl stop postgresql@12-main

        #systemctl stop postgresql@9.6-main
        #systemctl disable postgresql@9.6-main
        #su -l postgres -c "sh /vagrant/check_upgrade.sh && sh /vagrant/upgrade.sh"
    SHELL
end
